name: Packer Build

on:
  push:

    branches:
      - demo

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.12'

      - name: Install dependencies  
        run: |
            # sudo apt update && sudo apt upgrade
            sudo apt install -y python3-pip pkg-config libmysqlclient-dev

      - name: Install required libraries from requirements.txt
        run: |
            pip install -r requirements.txt

      - name: Creating logs folder.
        run: |
            sudo mkdir -p /var/log/webapp/

      - name: Configure MySQL
        env:
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DEFAULT_USER: ${{ secrets.DEFAULT_USER }}
          DEFAULT_PASS: ${{ secrets.DEFAULT_PASS }}
          HOST: ${{ secrets.HOST }}
        run: |
            sudo service mysql start
            mysql -u $DEFAULT_USER -p$DEFAULT_PASS -e"CREATE USER '$MYSQL_USER'@'$HOST' IDENTIFIED BY '$MYSQL_PASSWORD';"
            mysql -u $DEFAULT_USER -p$DEFAULT_PASS -e"GRANT ALL PRIVILEGES ON test_$DB_NAME.* TO '$MYSQL_USER'@'$HOST' WITH GRANT OPTION;"

      - name: Create .env file
        env:
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          LOG_FILE_PATH: ${{secrets.LOG_FILE_PATH}}
        run: |
            echo "TEST_DATABASE_URL=mysql://$MYSQL_USER:$MYSQL_PASSWORD@localhost/test_$DB_NAME" > .env
            echo "LOG_FILE_PATH=$LOG_FILE_PATH" >> .env
  
      - name: Run tests
        run: |
            python -m pytest tests/



  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DEFAULT_USER: ${{ secrets.DEFAULT_USER }}
      DEFAULT_PASS: ${{ secrets.DEFAULT_PASS }}
      HOST: ${{ secrets.HOST }}
      GA_AWS_ACCESS_KEY: ${{ secrets.GA_AWS_ACCESS_KEY }}
      GA_AWS_SECRET_ACCESS_KEY: ${{ secrets.GA_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{secrets.AWS_REGION}}
      AWS_AMI_NAME: ${{ secrets.AWS_AMI_NAME }}
      AWS_INSTANCE_TYPE: ${{ secrets.AWS_INSTANCE_TYPE }}
      AWS_SSH_USERNAME: ${{ secrets.AWS_SSH_USERNAME }}
      AWS_SUBNET_ID: ${{ secrets.AWS_SUBNET_ID }}
      AWS_VPC_ID: ${{ secrets.AWS_VPC_ID }}
      AWS_DEV_USER: ${{ secrets.AWS_DEV_USER }}
      AWS_DEMO_USER: ${{ secrets.AWS_DEMO_USER }}
      AWS_SOURCE_AMI: ${{ secrets.AWS_SOURCE_AMI }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_SOURCE_IMAGE: ${{ secrets.GCP_SOURCE_IMAGE }}
      GCP_SSH_USERNAME: ${{ secrets.GCP_SSH_USERNAME }}
      GCP_ZONE: ${{ secrets.GCP_ZONE }}
      GCP_DISK_SIZE: ${{ secrets.GCP_DISK_SIZE }}
      GCP_MACHINE_TYPE: ${{ secrets.GCP_MACHINE_TYPE }}
      GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.12'

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "latest"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.GA_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.GA_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Configure GCloud Credentials
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Create .env file
        run: |
            echo "TEST_DATABASE_URL=mysql://$MYSQL_USER:$MYSQL_PASSWORD@localhost/test_$DB_NAME" > .env
            echo "DATABASE_URL=mysql://$MYSQL_USER:$MYSQL_PASSWORD@localhost/$DB_NAME" >> .env


      - name: remove .git contents
        run: |
            rm -r .git
            which git

      - name: Create webapp.zip from existing directory
        run: |
            zip -r webapp.zip .
        shell: bash
  
      - name: Run packer fmt check
        run: |
            packer init .  
            
      - name: Run packer fmt check
        run: |
          packer fmt -check .
          if [ $? -ne 0 ]; then
            echo "Packer fmt failed."
            exit 1
          fi

      - name: Run packer validate
        run: |
          packer validate .
          if [ $? -ne 0 ]; then
            echo "Packer validate failed."
            exit 1
          fi

      - name: Build AMI
        run: |
            packer build machine-image.pkr.hcl