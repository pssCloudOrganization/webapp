name: Packer Status Check

on:
  pull_request:
    branches:
      - main

jobs:
  packer-check:
    name: Packer Format and Validate
    runs-on: ubuntu-latest
    env:
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DEFAULT_USER: ${{ secrets.DEFAULT_USER }}
      DEFAULT_PASS: ${{ secrets.DEFAULT_PASS }}
      HOST: ${{ secrets.HOST }}
      GA_AWS_ACCESS_KEY: ${{ secrets.GA_AWS_ACCESS_KEY_ID }}
      GA_AWS_SECRET_ACCESS_KEY: ${{ secrets.GA_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{secrets.AWS_REGION}}
      AMI_NAME: ${{ secrets.AMI_NAME }}
      AWS_INSTANCE_TYPE: ${{ secrets.AWS_INSTANCE_TYPE }}
      AWS_SSH_USERNAME: ${{ secrets.AWS_SSH_USERNAME }}
      AWS_SUBNET_ID: ${{ secrets.AWS_SUBNET_ID }}
      AWS_VPC_ID: ${{ secrets.AWS_VPC_ID }}
      AWS_DEV_USER: ${{ secrets.AWS_DEV_USER }}
      AWS_DEMO_USER: ${{ secrets.AWS_DEMO_USER }}
      AWS_SOURCE_AMI: ${{ secrets.AWS_SOURCE_AMI }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "latest"

      - name: creating zip
        run: |
            sudo apt-get install zip -y
            zip -r webapp.zip .  

      - name: Create .env file
        run: |
            echo "TEST_DATABASE_URL=mysql://$MYSQL_USER:$MYSQL_PASSWORD@localhost/test_$DB_NAME" > .env
            echo "DATABASE_URL=mysql://$MYSQL_USER:$MYSQL_PASSWORD@localhost/$DB_NAME" >> .env
            
      - name: Run packer fmt check
        run: |
            packer init .

      - name: Run packer fmt check
        run: |
          packer fmt -check .
          if [ $? -ne 0 ]; then
            echo "Packer fmt failed."
            exit 1
          fi

      - name: Run packer validate
        run: |
          packer validate .
          if [ $? -ne 0 ]; then
            echo "Packer validate failed."
            exit 1
          fi
